<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="generator.InterPayToPlanDao">
  <resultMap id="BaseResultMap" type="generator.InterPayToPlan">
    <id column="INTER_PLAN_ID" jdbcType="BIGINT" property="interPlanId" />
    <result column="OFFER_INST_ID" jdbcType="BIGINT" property="offerInstId" />
    <result column="OFFER_ID" jdbcType="BIGINT" property="offerId" />
    <result column="AMOUNT" jdbcType="DECIMAL" property="amount" />
    <result column="DEPOSIT_TYPE" jdbcType="INTEGER" property="depositType" />
    <result column="ACCT_ID" jdbcType="BIGINT" property="acctId" />
    <result column="OBJECT_TYPE" jdbcType="INTEGER" property="objectType" />
    <result column="OBJECT_ID" jdbcType="BIGINT" property="objectId" />
    <result column="OPER_TYPE" jdbcType="INTEGER" property="operType" />
    <result column="OPER_STATE" jdbcType="INTEGER" property="operState" />
    <result column="EFF_DATE" jdbcType="TIMESTAMP" property="effDate" />
    <result column="ORDER_DATE" jdbcType="TIMESTAMP" property="orderDate" />
    <result column="CREATE_DATE" jdbcType="TIMESTAMP" property="createDate" />
    <result column="OPER_DATE" jdbcType="TIMESTAMP" property="operDate" />
    <result column="RECOUNT" jdbcType="BIGINT" property="recount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    INTER_PLAN_ID, OFFER_INST_ID, OFFER_ID, AMOUNT, DEPOSIT_TYPE, ACCT_ID, OBJECT_TYPE, 
    OBJECT_ID, OPER_TYPE, OPER_STATE, EFF_DATE, ORDER_DATE, CREATE_DATE, OPER_DATE, RECOUNT
  </sql>
  <select id="selectByExample" parameterType="generator.InterPayToPlanExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from inter_pay_to_plan
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from inter_pay_to_plan
    where INTER_PLAN_ID = #{interPlanId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from inter_pay_to_plan
    where INTER_PLAN_ID = #{interPlanId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="generator.InterPayToPlanExample">
    delete from inter_pay_to_plan
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="generator.InterPayToPlan">
    insert into inter_pay_to_plan (INTER_PLAN_ID, OFFER_INST_ID, OFFER_ID, 
      AMOUNT, DEPOSIT_TYPE, ACCT_ID, 
      OBJECT_TYPE, OBJECT_ID, OPER_TYPE, 
      OPER_STATE, EFF_DATE, ORDER_DATE, 
      CREATE_DATE, OPER_DATE, RECOUNT
      )
    values (#{interPlanId,jdbcType=BIGINT}, #{offerInstId,jdbcType=BIGINT}, #{offerId,jdbcType=BIGINT}, 
      #{amount,jdbcType=DECIMAL}, #{depositType,jdbcType=INTEGER}, #{acctId,jdbcType=BIGINT}, 
      #{objectType,jdbcType=INTEGER}, #{objectId,jdbcType=BIGINT}, #{operType,jdbcType=INTEGER}, 
      #{operState,jdbcType=INTEGER}, #{effDate,jdbcType=TIMESTAMP}, #{orderDate,jdbcType=TIMESTAMP}, 
      #{createDate,jdbcType=TIMESTAMP}, #{operDate,jdbcType=TIMESTAMP}, #{recount,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="generator.InterPayToPlan">
    insert into inter_pay_to_plan
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="interPlanId != null">
        INTER_PLAN_ID,
      </if>
      <if test="offerInstId != null">
        OFFER_INST_ID,
      </if>
      <if test="offerId != null">
        OFFER_ID,
      </if>
      <if test="amount != null">
        AMOUNT,
      </if>
      <if test="depositType != null">
        DEPOSIT_TYPE,
      </if>
      <if test="acctId != null">
        ACCT_ID,
      </if>
      <if test="objectType != null">
        OBJECT_TYPE,
      </if>
      <if test="objectId != null">
        OBJECT_ID,
      </if>
      <if test="operType != null">
        OPER_TYPE,
      </if>
      <if test="operState != null">
        OPER_STATE,
      </if>
      <if test="effDate != null">
        EFF_DATE,
      </if>
      <if test="orderDate != null">
        ORDER_DATE,
      </if>
      <if test="createDate != null">
        CREATE_DATE,
      </if>
      <if test="operDate != null">
        OPER_DATE,
      </if>
      <if test="recount != null">
        RECOUNT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="interPlanId != null">
        #{interPlanId,jdbcType=BIGINT},
      </if>
      <if test="offerInstId != null">
        #{offerInstId,jdbcType=BIGINT},
      </if>
      <if test="offerId != null">
        #{offerId,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="depositType != null">
        #{depositType,jdbcType=INTEGER},
      </if>
      <if test="acctId != null">
        #{acctId,jdbcType=BIGINT},
      </if>
      <if test="objectType != null">
        #{objectType,jdbcType=INTEGER},
      </if>
      <if test="objectId != null">
        #{objectId,jdbcType=BIGINT},
      </if>
      <if test="operType != null">
        #{operType,jdbcType=INTEGER},
      </if>
      <if test="operState != null">
        #{operState,jdbcType=INTEGER},
      </if>
      <if test="effDate != null">
        #{effDate,jdbcType=TIMESTAMP},
      </if>
      <if test="orderDate != null">
        #{orderDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="operDate != null">
        #{operDate,jdbcType=TIMESTAMP},
      </if>
      <if test="recount != null">
        #{recount,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="generator.InterPayToPlanExample" resultType="java.lang.Long">
    select count(*) from inter_pay_to_plan
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update inter_pay_to_plan
    <set>
      <if test="record.interPlanId != null">
        INTER_PLAN_ID = #{record.interPlanId,jdbcType=BIGINT},
      </if>
      <if test="record.offerInstId != null">
        OFFER_INST_ID = #{record.offerInstId,jdbcType=BIGINT},
      </if>
      <if test="record.offerId != null">
        OFFER_ID = #{record.offerId,jdbcType=BIGINT},
      </if>
      <if test="record.amount != null">
        AMOUNT = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.depositType != null">
        DEPOSIT_TYPE = #{record.depositType,jdbcType=INTEGER},
      </if>
      <if test="record.acctId != null">
        ACCT_ID = #{record.acctId,jdbcType=BIGINT},
      </if>
      <if test="record.objectType != null">
        OBJECT_TYPE = #{record.objectType,jdbcType=INTEGER},
      </if>
      <if test="record.objectId != null">
        OBJECT_ID = #{record.objectId,jdbcType=BIGINT},
      </if>
      <if test="record.operType != null">
        OPER_TYPE = #{record.operType,jdbcType=INTEGER},
      </if>
      <if test="record.operState != null">
        OPER_STATE = #{record.operState,jdbcType=INTEGER},
      </if>
      <if test="record.effDate != null">
        EFF_DATE = #{record.effDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderDate != null">
        ORDER_DATE = #{record.orderDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createDate != null">
        CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operDate != null">
        OPER_DATE = #{record.operDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.recount != null">
        RECOUNT = #{record.recount,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update inter_pay_to_plan
    set INTER_PLAN_ID = #{record.interPlanId,jdbcType=BIGINT},
      OFFER_INST_ID = #{record.offerInstId,jdbcType=BIGINT},
      OFFER_ID = #{record.offerId,jdbcType=BIGINT},
      AMOUNT = #{record.amount,jdbcType=DECIMAL},
      DEPOSIT_TYPE = #{record.depositType,jdbcType=INTEGER},
      ACCT_ID = #{record.acctId,jdbcType=BIGINT},
      OBJECT_TYPE = #{record.objectType,jdbcType=INTEGER},
      OBJECT_ID = #{record.objectId,jdbcType=BIGINT},
      OPER_TYPE = #{record.operType,jdbcType=INTEGER},
      OPER_STATE = #{record.operState,jdbcType=INTEGER},
      EFF_DATE = #{record.effDate,jdbcType=TIMESTAMP},
      ORDER_DATE = #{record.orderDate,jdbcType=TIMESTAMP},
      CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      OPER_DATE = #{record.operDate,jdbcType=TIMESTAMP},
      RECOUNT = #{record.recount,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="generator.InterPayToPlan">
    update inter_pay_to_plan
    <set>
      <if test="offerInstId != null">
        OFFER_INST_ID = #{offerInstId,jdbcType=BIGINT},
      </if>
      <if test="offerId != null">
        OFFER_ID = #{offerId,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
        AMOUNT = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="depositType != null">
        DEPOSIT_TYPE = #{depositType,jdbcType=INTEGER},
      </if>
      <if test="acctId != null">
        ACCT_ID = #{acctId,jdbcType=BIGINT},
      </if>
      <if test="objectType != null">
        OBJECT_TYPE = #{objectType,jdbcType=INTEGER},
      </if>
      <if test="objectId != null">
        OBJECT_ID = #{objectId,jdbcType=BIGINT},
      </if>
      <if test="operType != null">
        OPER_TYPE = #{operType,jdbcType=INTEGER},
      </if>
      <if test="operState != null">
        OPER_STATE = #{operState,jdbcType=INTEGER},
      </if>
      <if test="effDate != null">
        EFF_DATE = #{effDate,jdbcType=TIMESTAMP},
      </if>
      <if test="orderDate != null">
        ORDER_DATE = #{orderDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createDate != null">
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="operDate != null">
        OPER_DATE = #{operDate,jdbcType=TIMESTAMP},
      </if>
      <if test="recount != null">
        RECOUNT = #{recount,jdbcType=BIGINT},
      </if>
    </set>
    where INTER_PLAN_ID = #{interPlanId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="generator.InterPayToPlan">
    update inter_pay_to_plan
    set OFFER_INST_ID = #{offerInstId,jdbcType=BIGINT},
      OFFER_ID = #{offerId,jdbcType=BIGINT},
      AMOUNT = #{amount,jdbcType=DECIMAL},
      DEPOSIT_TYPE = #{depositType,jdbcType=INTEGER},
      ACCT_ID = #{acctId,jdbcType=BIGINT},
      OBJECT_TYPE = #{objectType,jdbcType=INTEGER},
      OBJECT_ID = #{objectId,jdbcType=BIGINT},
      OPER_TYPE = #{operType,jdbcType=INTEGER},
      OPER_STATE = #{operState,jdbcType=INTEGER},
      EFF_DATE = #{effDate,jdbcType=TIMESTAMP},
      ORDER_DATE = #{orderDate,jdbcType=TIMESTAMP},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      OPER_DATE = #{operDate,jdbcType=TIMESTAMP},
      RECOUNT = #{recount,jdbcType=BIGINT}
    where INTER_PLAN_ID = #{interPlanId,jdbcType=BIGINT}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:spring-zext-web="http://www.asiainfo-linkage.com/schema/spring-zext-web"
    xmlns:spring-zext-service="http://www.asiainfo-linkage.com/schema/spring-zext-service"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"     
	xsi:schemaLocation="
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.asiainfo-linkage.com/schema/spring-zext-web http://www.asiainfo-linkage.com/schema/spring-zext-web.xsd
        http://www.asiainfo-linkage.com/schema/spring-zext-service http://www.asiainfo-linkage.com/schema/spring-zext-service.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd  
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	
	<!-- 引入配置文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:config/jdbc.properties" />
	</bean>
	<!-- 注册解析注解的处理器  -->
	<aop:config proxy-target-class="true"></aop:config>
	<!-- 启用AspectJ对Annotation的支持 --> 
	<aop:aspectj-autoproxy/>

<!-- 	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}"/>
		<property name="jdbcUrl" value="${jdbc.url}"/>
		<property name="user" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<property name="acquireIncrement" value="${acquireIncrement}"></property>
		<property name="maxIdleTime" value="${maxIdleTime}"></property>
		<property name="initialPoolSize" value="${initialPoolSize}"></property>
		<property name="maxPoolSize" value="${maxPoolSize}"></property>
		<property name="minPoolSize" value="${minPoolSize}"></property>
		<property name="maxStatements" value="${maxStatements}"></property>
		<property name="maxStatementsPerConnection" value="${maxStatementsPerConnection}"></property>
	</bean> -->

	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描mapping.xml文件 -->
  		<property name="mapperLocations" value="classpath*:com/al/nppm/business/*/dao/*.xml"></property>
 		<property name="configLocation"  value="classpath:config/mybatis-config.xml"/> 
	</bean>
	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.al.nppm.business.*.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<bean id="parentSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}"/>
		<property name="acquireIncrement" value="${acquireIncrement}"></property>
		<property name="maxIdleTime" value="${maxIdleTime}"></property>
		<property name="initialPoolSize" value="${initialPoolSize}"></property>
		<property name="maxPoolSize" value="${maxPoolSize}"></property>
		<property name="minPoolSize" value="${minPoolSize}"></property>
		<property name="maxStatements" value="${maxStatements}"></property>
		<property name="maxStatementsPerConnection" value="${maxStatementsPerConnection}"></property>
	</bean>
	
 	<bean id="nppmDataSource" parent="parentSource">
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean> 
	
<!-- 	<bean id="cfgDataSource" parent="parentSource"> -->
<!-- 		<property name="jdbcUrl" value="${jdbc.cfg.url}" /> -->
<!-- 		<property name="user" value="${jdbc.cfg.username}" /> -->
<!-- 		<property name="password" value="${jdbc.cfg.password}" /> -->
<!-- 	</bean>  -->

	<bean id="dataSource" class="com.al.nppm.common.aop.DynamicDataSource"> 
		<property name="targetDataSources">
			 <map key-type="java.lang.String">
<!--   			 	<entry key="cfg" value-ref="cfgDataSource" /> -->
  			 	<entry key="nppm" value-ref="nppmDataSource" />
  			 	<entry key="ord" value-ref="ordDataSource" /> 
			 </map>
		</property>
 		<property name="defaultTargetDataSource" ref="nppmDataSource"/>
 	</bean>

	<bean id="choiceDataSource" class="com.al.nppm.common.aop.ChoiceDataSource"></bean>
	<aop:config proxy-target-class="true">
		<aop:aspect ref="choiceDataSource">
			<aop:pointcut expression="execution(* com.al.nppm.business.*.service..*.*(..))"
				id="logpointcut" />
			<aop:before method="doAccessCheck" pointcut-ref="logpointcut" />
			<aop:after-returning method="doAfterReturning"
				pointcut-ref="logpointcut" />
		</aop:aspect>
	</aop:config> 

	<!-- 新增数据连接 -->	
	<bean id="zlDataSource" parent="parentSource">
		<property name="jdbcUrl" value="${jdbc.zl.url}" />
		<property name="user" value="${jdbc.zl.username}" />
		<property name="password" value="${jdbc.zl.password}" />
	</bean>
	<bean id="zlSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="zlDataSource" />
 		<property name="configLocation"  value="classpath:config/mybatis-config.xml"/> 
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.al.nppm.business.syntomq.mapper" /> 
		<property name="sqlSessionFactoryBeanName" value="zlSqlSessionFactory"></property>
	</bean>
	<bean id="zlTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="zlDataSource" />
	</bean>
	
	<!-- 接口表数据源 -->
	<bean id="ordDataSource" parent="parentSource">
 		<property name="jdbcUrl" value="${jdbc.ord.url}" />
 		<property name="user" value="${jdbc.ord.username}" /> 
 		<property name="password" value="${jdbc.ord.password}" /> 
 	</bean> 	
	<bean id="sqlSessionFactory_ord" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="ordDataSource" />
		<!-- 自动扫描mapping.xml文件 -->
  		<property name="mapperLocations" value="classpath*:com/al/nppm/ord/*/dao/*.xml"></property>
 		<property name="configLocation"  value="classpath:config/mybatis-config.xml"/> 
	</bean>
	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.al.nppm.ord.*.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory_ord"></property>
	</bean>
	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager_ord"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="ordDataSource" />
	</bean>

</beans>